---
- name: Install or upgrade the ArgoCD Helm release
  kubernetes.core.helm:
    release_name: argocd
    release_namespace: argocd
    create_namespace: true
    chart_ref: "argo-cd"
    chart_repo_url: "https://argoproj.github.io/argo-helm"
    kubeconfig: "/home/{{ ansible_user }}/.kube/config"
    release_values:
      server:
        metrics:
          enabled: true
        service:
          type: LoadBalancer
          loadBalancerIP: 192.168.56.100
        controller:
          metrics:
            enabled: true
        configs:
          params:
            server.insecure: true
        ingress:
          enabled: true
          ingressClassName: traefik
          hosts:
            - argocd.web

- name: Wait for all ArgoCD pods to be Ready
  shell: KUBECONFIG=/home/{{ ansible_user }}/.kube/config kubectl wait --namespace=argocd --for=condition=Ready pod --all --timeout=180s
  register: argocd_pods_ready
  until: argocd_pods_ready.rc == 0
  changed_when: false

- name: Get exposed nodePort for ArgoCD server
  shell: KUBECONFIG=/home/{{ ansible_user }}/.kube/config kubectl get svc argocd-server -n argocd -o jsonpath="{.spec.ports[?(@.port==80)].nodePort}"
  register: argocd_node_port
  no_log: true
  changed_when: false

- name: Get initial admin password of ArgoCD
  shell: KUBECONFIG=/home/{{ ansible_user }}/.kube/config kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d
  register: argocd_admin_password
  no_log: true
  changed_when: false

- name: Build ArgoCD API URL
  set_fact:
    argocd_api_url: "https://{{ hostvars['master'].ansible_host }}:{{ argocd_node_port.stdout }}"

- name: Get ArgoCD authentication token via API
  uri:
    url: "{{ argocd_api_url }}/api/v1/session"
    method: POST
    body_format: json
    body:
      username: "admin"
      password: "{{ argocd_admin_password.stdout }}"
    return_content: yes
    validate_certs: false
  register: argocd_token_response
  no_log: true

- name: Build ArgoCD API token
  set_fact:
    argocd_api_token: "{{ argocd_token_response.json.token }}"

- name: Create an ArgoCD app of apps
  uri:
    url: "{{ argocd_api_url }}/api/v1/applications"
    method: POST
    headers:
      Authorization: "Bearer {{ argocd_api_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      metadata:
        name: app-of-apps
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: "https://github.com/Hamza-Ikiou/argocd-applications.git"
          path: "applications"
          targetRevision: "main"
          directory:
            recurse: true
        destination:
          server: "https://kubernetes.default.svc"
          namespace: argocd
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - Validate=true
            - CreateNamespace=true
            - PrunePropagationPolicy=foreground
            - PruneLast=true
    validate_certs: false
    status_code: [200, 201]