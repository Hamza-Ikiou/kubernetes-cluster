---
- name: Ensure apt cache is updated and required packages are installed
  apt:
    name:
      - ca-certificates
      - curl
    update_cache: yes
    state: present

- name: Create directory for APT keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  register: download_docker_gpg
  retries: 3
  delay: 5
  until: download_docker_gpg is succeeded

- name: Set Docker repository variables
  set_fact:
    docker_arch: "{{ (ansible_architecture == 'x86_64') | ternary('amd64', ansible_architecture) }}"
    docker_codename: "{{ ansible_lsb.codename | default(ansible_distribution_release) }}"

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ docker_codename }} stable"
    filename: docker
    state: present

- name: Ensure apt cache is updated and required packages are installed
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    update_cache: yes
    state: present

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Download cri-dockerd deb package
  get_url:
    url: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.16/cri-dockerd_0.3.16.3-0.ubuntu-jammy_amd64.deb
    dest: /tmp/cri-dockerd_0.3.16.3-0.ubuntu-jammy_amd64.deb
    mode: '0644'
  register: download_cri_dockerd
  retries: 3
  delay: 5
  until: download_cri_dockerd is succeeded

- name: Install cri-dockerd package
  apt:
    deb: /tmp/cri-dockerd_0.3.16.3-0.ubuntu-jammy_amd64.deb
    state: present

- name: Remove cri-dockerd deb package file
  file:
    path: /tmp/cri-dockerd_0.3.16.3-0.ubuntu-jammy_amd64.deb
    state: absent

- name: Disable all swap immediately
  command: swapoff -a

- name: Comment out swap entries in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*swap.*)$'
    replace: '# \1'
    backup: yes

- name: Enable IP forwarding for Kubernetes
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/k8s.conf

- name: Ensure apt cache is updated and required packages are installed
  apt:
    name:
      - apt-transport-https
      - gpg
    state: present
    update_cache: yes

- name: Download Kubernetes GPG key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key
    dest: /tmp/kubernetes-apt-keyring.asc
    mode: '0644'
  register: download_k8s_gpg
  retries: 3
  delay: 5
  until: download_k8s_gpg is succeeded

- name: Convert Kubernetes GPG key to binary format
  command: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-apt-keyring.asc"
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /"
    filename: kubernetes
    state: present

- name: Remove temporary ASCII key file
  file:
    path: /tmp/kubernetes-apt-keyring.asc
    state: absent

- name: Update apt cache and install Kubernetes packages
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Hold kubelet, kubeadm and kubectl packages to prevent upgrades
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Update apt cache and install socat package
  apt:
    name: socat
    state: present
    update_cache: yes